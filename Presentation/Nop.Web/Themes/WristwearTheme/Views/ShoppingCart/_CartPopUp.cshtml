@model MiniShoppingCartModel
@using Nop.Web.Models.ShoppingCart;


<div id="flyout-cart" class="flyout-main-wrapper" hidden="hidden">
       
        <div class="flyout-cart-wrapper" id="flyout-cart-wrapper1">
            <div class="mini-shopping-cart_1">
                <div class="count" style="padding: 5px 0px; border-bottom:0px">
                    @if (Model.TotalProducts == 0)
                    {
                        @T("ShoppingCart.Mini.NoItems")
                    }
                    else
                    {
                        @Html.Raw(string.Format(T("ShoppingCart.Mini.ItemsText").Text, string.Format("<a href=\"{0}\" class=\"items\">{1}</a>", Url.RouteUrl("ShoppingCart"), string.Format(T("ShoppingCart.Mini.Items").Text, Model.TotalProducts))))
                    }
                </div>
                @if (Model.TotalProducts > 0)
                {
                    <div class="items">

                        @{
                            var item = Model.Items[0];
                        }

                        @if (Model.ShowProductImages)
                        {
                            <div class="picture">
                                <a href="@Url.RouteUrl("Product", new { SeName = item.ProductSeName })" title="@item.Picture.Title">
                                    <img alt="@item.Picture.AlternateText" src="@item.Picture.ImageUrl" title="@item.Picture.Title" />
                                </a>
                            </div>
                        }
                        <div class="product">
                            <div class="name">
                                <a href="@Url.RouteUrl("Product", new { SeName = item.ProductSeName })">@item.ProductName</a>
                            </div>
                            @*@if (!String.IsNullOrEmpty(item.AttributeInfo))
                    {
                        <div class="attributes">
                            @Html.Raw(item.AttributeInfo)
                        </div>
                    }*@
                            <div class="quantity"><span>@item.Quantity</span></div>
                            <div class="price"><span>@item.UnitPrice</span></div>
                        </div>


                    </div>
                    <div class="totals">@T("ShoppingCart.Totals.SubTotal"): <strong>@Model.SubTotal</strong></div>

                    <div class="buttons row">

                        @if (Model.DisplayShoppingCartButton)
                        {
                            <input type="button" value="@T("ShoppingCart.Mini.ViewCart")" class="btn btn-outline-dark" onclick="setLocation('@(Url.RouteUrl("ShoppingCart"))')" style="justify-content: space-between;  width: 120px; padding: 7px" />

                        }

                        @{
                            var checkoutUrl = "";
                            if (Model.AnonymousCheckoutAllowed && Model.CurrentCustomerIsGuest)
                            {
                                checkoutUrl = Url.RouteUrl("LoginCheckoutAsGuest", new { returnUrl = Url.RouteUrl("ShoppingCart") });
                            }
                            else
                            {
                                checkoutUrl = Url.RouteUrl("Checkout");
                            }
                            <input type="button" value="@T("Checkout.Button")" class="btn btn-outline-dark" onclick="setLocation('@checkoutUrl')" style="justify-content: space-between;  width: 120px; margin-left: 60px; padding: 7px" />
                        }
                    </div>
                    
                    <u style="margin-left: 60px;color:black"><a  value="@T("ShoppingCart.ContinueShopping")" style="font-size:18px; color:black;" class="links" onclick="setLocation('@Url.RouteUrl("HomePage")')">@T("ShoppingCart.ContinueShopping") </a></u>
                    
                }
            </div>
        </div>
    </div>
