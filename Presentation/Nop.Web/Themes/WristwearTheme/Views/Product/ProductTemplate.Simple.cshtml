@model ProductDetailsModel
@using Nop.Core.Domain.Seo;
@using Nop.Core.Infrastructure;
@using Nop.Web.Models.Catalog;
@using Nop.Web.Models.ShoppingCart;
@{
    Layout = "~/Views/Shared/_ColumnsOne.cshtml";

    var a = new MiniShoppingCartModel();
    //title
    Html.AddTitleParts(!String.IsNullOrEmpty(Model.MetaTitle) ? Model.MetaTitle : Model.Name);
    //meta
    Html.AddMetaDescriptionParts(Model.MetaDescription);
    Html.AddMetaKeywordParts(Model.MetaKeywords);
    //page class
    Html.AppendPageCssClassParts("html-product-details-page");

    var seoSettings = EngineContext.Current.Resolve<SeoSettings>();
    //canonical URL
    if (seoSettings.CanonicalUrlsEnabled)
    {
        var productUrl = Url.RouteUrl("Product", new { SeName = Model.SeName }, this.Request.Url.Scheme);
        Html.AddCanonicalUrlParts(productUrl);
    }
    //open graph META tags
    if (seoSettings.OpenGraphMetaTags)
    {
        Html.AddHeadCustomParts("<meta property=\"og:type\" content=\"product\" />");
        Html.AddHeadCustomParts("<meta property=\"og:title\" content=\"" + Html.Encode(Model.Name) + "\" />");
        Html.AddHeadCustomParts("<meta property=\"og:description\" content=\"" + Html.Encode(Nop.Core.Html.HtmlHelper.StripTags(Model.MetaDescription)) + "\" />");
        Html.AddHeadCustomParts("<meta property=\"og:image\" content=\"" + Model.DefaultPictureModel.ImageUrl + "\" />");
        Html.AddHeadCustomParts("<meta property=\"og:url\" content=\"" + Request.Url.AbsoluteUri + "\" />");
        Html.AddHeadCustomParts("<meta property=\"og:site_name\" content=\"" + Html.Encode(Model.CurrentStoreName) + "\" />");
    }

    //Twitter META tags
    if (seoSettings.TwitterMetaTags)
    {
        Html.AddHeadCustomParts("<meta property=\"twitter:card\" content=\"summary\" />");
        Html.AddHeadCustomParts("<meta property=\"twitter:site\" content=\"" + Html.Encode(Model.CurrentStoreName) + "\" />");
        Html.AddHeadCustomParts("<meta property=\"twitter:title\" content=\"" + Html.Encode(Model.Name) + "\" />");
        Html.AddHeadCustomParts("<meta property=\"twitter:description\" content=\"" + Html.Encode(Nop.Core.Html.HtmlHelper.StripTags(Model.MetaDescription)) + "\" />");
        Html.AddHeadCustomParts("<meta property=\"twitter:image\" content=\"" + Model.DefaultPictureModel.ImageUrl + "\" />");
        Html.AddHeadCustomParts("<meta property=\"twitter:url\" content=\"" + Request.Url.AbsoluteUri + "\" />");
    }
}

<!--product breadcrumb-->
@Html.Partial("_ProductBreadcrumb", Model.Breadcrumb)
@Html.Widget("productdetails_after_breadcrumb", Model.Id)

<div class="modal cart-popup-wrapper fade "  id="confirm-delete" data-cart-popup-wrapper  role="dialog" aria-labelledby="myModalLabel" data-backdrop="false">
    <div class="modals-dialog modal-dialog" role="document" id="cartdialog">
        <div class="modal-content">
            <div class="modal-header" style="padding:10px;">
                <span style="color:black">JUST ADDED TO YOUR CART</span>
                <button type="button" class="close" data-dismiss="modal" id="modalclose" style="color:black;opacity:2.2">X</button>
            </div>
            <div class="modal-body" id="cartnodalbody" style="padding:5px">

            </div>


            
        </div>
    </div>
</div>
<button type="button" id="cartbtn" class="btnbtn-default" data-toggle="modal" data-target="#confirm-delete" hidden="hidden"></button>
<div class="page product-details-page drawer-page-content page-container">
    <div class="page-body">
        @Html.Widget("productdetails_top", Model.Id)
        @using (Html.BeginRouteForm("Product", new { SeName = Model.SeName }, FormMethod.Post, new { id = "product-details-form" }))
        {
            <div itemscope itemtype="http://schema.org/Product" data-productid="@Model.Id">
                <div class="product-essential">
                    <div class="row">
                        <div class="col-md-5">
                            @Html.Widget("productdetails_before_pictures", Model.Id)
                            <!--product pictures-->
                            @Html.Partial("_ProductDetailsPictures", Model)
                            @Html.Widget("productdetails_after_pictures", Model.Id)
                        </div>
                        <div class="col-md-7">
                            @Html.Partial("_Discontinued", Model)
                            <div class="overview">
                                <div class="product-name panel-heading">
                                    <h1 itemprop="name">
                                        @Model.Name
                                    </h1>
                                </div>
                                <!--short description-->
                                @if (!String.IsNullOrEmpty(Model.ShortDescription))
                                {
                                    <div class="short-description">
                                        @Html.Raw(Model.ShortDescription)
                                    </div>
                                }
                                @Html.Widget("productdetails_overview_top", Model.Id)
                                <!--product reviews-->
                                @Html.Partial("_ProductReviewOverview", Model.ProductReviewOverview)
                                <!--availability-->
                                @Html.Partial("_Availability", Model)
                                <!--product manufacturers-->
                                @Html.Partial("_ProductManufacturers", Model.ProductManufacturers)
                                <!--SKU, MAN, GTIN, vendor-->
                                @Html.Partial("_SKU_Man_GTIN_Ven", Model)
                                <!--delivery-->
                                @Html.Partial("_DeliveryInfo", Model)
                                <!--sample download-->
                                @Html.Partial("_DownloadSample", Model)
                                <!--rental info-->
                                @{
                                    var dataDictRental = new ViewDataDictionary();
                                    dataDictRental.TemplateInfo.HtmlFieldPrefix = string.Format("rental_{0}", Model.Id);
                                    @Html.Partial("_RentalInfo", Model, dataDictRental)
                                }
                                <!--product price-->
                                @{
                                    var dataDictPrice = new ViewDataDictionary();
                                    dataDictPrice.TemplateInfo.HtmlFieldPrefix = string.Format("price_{0}", Model.Id);
                                    @Html.Partial("_ProductPrice", Model.ProductPrice, dataDictPrice)
                                }
                                <!--product attributes-->
                                @{
                                    var dataDictAttributes = new ViewDataDictionary();
                                    dataDictAttributes.TemplateInfo.HtmlFieldPrefix = string.Format("attributes_{0}", Model.Id);
                                    @Html.Partial("_ProductAttributes", Model.ProductAttributes, dataDictAttributes)
                                }
                                <!--gift card-->
                                @{
                                    var dataDictGiftCard = new ViewDataDictionary();
                                    dataDictGiftCard.TemplateInfo.HtmlFieldPrefix = string.Format("giftcard_{0}", Model.Id);
                                    @Html.Partial("_GiftCardInfo", Model.GiftCard, dataDictGiftCard)
                                }
                                <!--addtocart-->
                                @{
                                    var dataDictAddToCart = new ViewDataDictionary();
                                    dataDictAddToCart.TemplateInfo.HtmlFieldPrefix = string.Format("addtocart_{0}", Model.Id);
                                    @Html.Partial("_AddToCart", Model.AddToCart, dataDictAddToCart)
                                }
                                <div class="overview-buttons">
                                    <!--wishlist, compare, email a friend-->
                                    @Html.Widget("productdetails_inside_overview_buttons_before", Model.Id)
                                    @{
                                        var dataDictAddToWishlist = new ViewDataDictionary();
                                        dataDictAddToWishlist.TemplateInfo.HtmlFieldPrefix = string.Format("addtocart_{0}", Model.Id);
                                        @Html.Partial("_AddToWishlist", Model.AddToCart, dataDictAddToWishlist)
                                    }
                                    @Html.Partial("_CompareProductsButton", Model)
                                    @Html.Partial("_ProductEmailAFriendButton", Model)
                                    @Html.Widget("productdetails_inside_overview_buttons_after", Model.Id)
                                </div>
                                @*@Html.Partial("_ShareButton", Model)*@
                                @Html.Widget("productdetails_overview_bottom", Model.Id)
                            </div>
                        </div>
                        <div class="col-md-12 product-details-tabs">
                            <ul class="nav nav-tabs">
                                @if (!String.IsNullOrEmpty(Model.FullDescription))
                                {
                                    <li class="active"><a href="#description" data-toggle="tab">@T("account.vendorinfo.description")</a></li>
                                }
                                @if (Model.ProductSpecifications.Count > 0)
                                {
                                    <li><a href="#specification" data-toggle="tab">@T("Products.Specs")</a></li>
                                }
                                @if (Model.ProductTags.Count > 0)
                                {
                                    <li><a href="#tags" data-toggle="tab">@T("Products.Tags")</a></li>
                                }
                                @if (Model.TierPrices.Count > 0)
                                {
                                    <li><a href="#tierprices" data-toggle="tab">@T("Tier Prices")</a></li>
                                }
                            </ul>
                            <div class="tab-content">
                                @if (!String.IsNullOrEmpty(Model.FullDescription))
                                {
                                    <div class="full-description tab-pane fade in active" id="description" itemprop="description">
                                        @Html.Raw(Model.FullDescription)
                                    </div>
                                }
                                <div class="product-specification tab-pane fade" id="specification">
                                    @Html.Partial("_ProductSpecifications", Model.ProductSpecifications)
                                </div>
                                <div class="product-tags tab-pane fade" id="tags">
                                    @Html.Partial("_ProductTags", Model.ProductTags)
                                </div>
                                <div class="product-tierprices tab-pane fade" id="tierprices">
                                    @Html.Partial("_ProductTierPrices", Model.TierPrices)
                                </div>
                            </div>
                        </div>
                        <div align="center">
                            @*azaz*@
                            @Html.Partial("_ShareButton", Model)
                        </div><br />
                    </div>
                    <div>
                        <img src="~/Content/Images/uploaded/Payment_icons.png" class="Image_payment" />
                    </div>
                </div>
                @Html.Widget("productdetails_before_collateral")
                <div class="product-collateral">
                    <div class="row">
                        @Html.Action("RelatedProducts", "Product", new { productId = Model.Id })
                        @Html.Action("ProductsAlsoPurchased", "Product", new { productId = Model.Id })
                    </div>
                </div>
            </div>
        }
        @Html.Widget("productdetails_bottom", Model.Id)
    </div>
</div>
<script type="text/javascript">
    $(document).ready(function () {
        var a = $(document).width();
        if (a < 415) {
            $("#cartdialog").addClass("cart-modal-dialog")
            $("#cartdialog").removeClass("modals-dialog")
        } 
    })
</script>